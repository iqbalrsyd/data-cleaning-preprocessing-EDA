# -*- coding: utf-8 -*-
"""Data cleaning and prepocessing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14LlSLMXRPOkRCyxiXNq2R7VsxmG2A9PD
"""

import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from IPython.display import display
import warnings

! pip install kaggle

from google.colab import drive
drive.mount('/content/drive')

! mkdir ~./kaggle

!cp /content/drive/MyDrive/kaggle.json ~/.kaggle/kaggle.json

! chmod 600 ~/.kaggle/kaggle.json

! kaggle datasets download -d oleksiimartusiuk/e-commerce-data-shein

! unzip e-commerce-data-shein.zip -d /content/e-commerce-data-shein

file_directories = []

for file in os.listdir('/content/e-commerce-data-shein'):
  print('/content/e-commerce-data-shein', file, sep='/')
  file_directories.append(file)

for file in file_directories:
    if file.endswith('.csv'):
        file_path = f'/content/{file}'
        df = pd.read_csv(file_path)
        display(df.head())

warnings.filterwarnings('ignore')

file_names = []
category_names = []

for directory in file_directories:
    split_directory = directory.split('-')
    file_names.append((split_directory[2] + '-' + split_directory[3]))
    category_names.append(split_directory[2])

data_folder = '/content/e-commerce-data-shein'

file_names = [file for file in os.listdir(data_folder) if file.endswith('.csv')]

df_names = []

for file in file_names:
    file_path = f'{data_folder}/{file}'  # Gabungkan folder dan nama file dengan '/'

    category = file.replace('us-shein-', '').replace('.csv', '').split('-')[0]

    try:
        df = pd.read_csv(file_path)  # Membaca file CSV
        df_name = f'{category}'  # Nama DataFrame sesuai kategori
        globals()[df_name] = df  # Menyimpan DataFrame dengan nama variabel dinamis
        df_names.append(df_name)  # Tambahkan nama DataFrame ke list
        print(f'Successfully loaded {df_name}')
    except FileNotFoundError:
        print(f'File {file_path} not found. Please check the path or file name.')
    except pd.errors.EmptyDataError:
        print(f'File {file_path} is empty. Skipping this file.')
    except Exception as e:
        print(f'An error occurred while loading {file_path}: {e}')

all_columns = set()

for category in category_names:
    df_name = f"{category}"

    all_columns.update(globals()[df_name].columns)

all_columns = list(all_columns)

dfs = [globals()[category].reindex(columns=all_columns) for category in category_names]
merged_df = pd.concat(dfs, ignore_index=True)

display(merged_df)

merged_df.shape

print(merged_df.isnull().sum())

print(merged_df.isnull().mean() * 100)

merged_df.info()

for column in merged_df.columns:
    value_counts_df = merged_df[column].value_counts(dropna=False).reset_index()
    value_counts_df.columns = [column, 'Count']  # Rename columns for clarity
    print(f"Value counts for column: {column}")
    display(value_counts_df)
    print("\n")